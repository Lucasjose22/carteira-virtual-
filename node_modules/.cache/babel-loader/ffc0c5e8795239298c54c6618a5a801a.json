{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Downloads/tudo/exes-master/src/components/AddButton/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport AddFormModal from '../AddFormModal';\nimport { Button } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddButton() {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddFormModal, {\n      isOpen: isModalOpen,\n      onCloseModal: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setIsModalOpen(prevState => !prevState),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddButton, \"zaqJ40eh0M6yaLfGmGPB1BIR34A=\");\n\n_c = AddButton;\nexport default AddButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddButton\");","map":{"version":3,"sources":["/home/lucas/Downloads/tudo/exes-master/src/components/AddButton/index.js"],"names":["useState","AddFormModal","Button","AddButton","isModalOpen","setIsModalOpen","prevState"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,MAAM,EAAEI,WADV;AAEE,MAAA,YAAY,EAAE,MAAMC,cAAc,CAAC,KAAD;AAFpC;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMA,cAAc,CAACC,SAAS,IAAI,CAACA,SAAf,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GAbQH,S;;KAAAA,S;AAeT,eAAeA,SAAf","sourcesContent":["import { useState } from 'react'\nimport AddFormModal from '../AddFormModal'\nimport { Button } from './styles'\n\nfunction AddButton() {\n\n  const [ isModalOpen, setIsModalOpen ] = useState(false); \n\n  return (\n    <>\n      <AddFormModal \n        isOpen={isModalOpen} \n        onCloseModal={() => setIsModalOpen(false)}\n      />\n      <Button onClick={() => setIsModalOpen(prevState => !prevState)}>+</Button>\n    </>\n  )\n}\n\nexport default AddButton"]},"metadata":{},"sourceType":"module"}